'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var lr = require('@lezer/lr');
var language = require('@codemirror/language');
var highlight = require('@lezer/highlight');

// This file was generated by lezer-generator. You probably shouldn't edit it.
const parser = lr.LRParser.deserialize({
  version: 14,
  states: "!WQYQPOOOeQPO'#CcOOQO'#Ch'#ChOOQO'#Cd'#CdQYQPOOOOQO,58},58}OsQPO,58}OOQO-E6b-E6bOOQO1G.i1G.i",
  stateData: "!R~OZOSPOS~ORQOSQOUPO~ORQOSQOTTOUPO~ORQOSQOTWOUPO~O",
  goto: "t]PPPPPPP^dPPPnXQOPSUQSOQUPTVSUXROPSU",
  nodeNames: "âš  LineComment Program Identifier String } { Application",
  maxTerm: 12,
  nodeProps: [
    ["openedBy", 5,"{"],
    ["closedBy", 6,"}"]
  ],
  skippedNodes: [0,1],
  repeatNodeCount: 1,
  tokenData: "6O~RbXY!ZYZ!Z]^!Zpq!Zqr!lrs&vst(d#U#V({#V#W*T#X#Y+{#a#b,_#d#e,q#f#g.f#g#h/z#j#k4f#k#l4x#o#p5t#q#r5y~!`SZ~XY!ZYZ!Z]^!Zpq!Z~!oQ#V#W!u#]#^#v~!xP#c#d!{~#OP#b#c#R~#UP#g#h#X~#[P#h#i#_~#bP#T#U#e~#hP#b#c#k~#nP#h#i#q~#vOR~~#yP#W#X#|~$PP#X#Y$S~$VP#b#c$Y~$]P#h#i$`~$cP#]#^$f~$iP#Y#Z$l~$oP#]#^$r~$uP#X#Y$x~${P#f#g%O~%RP#g#h%U~%XPpq%[~%_P#[#]%b~%eP#]#^%h~%kP#X#Y%n~%qP#f#g%t~%wP#T#U%z~%}P#f#g&Q~&TP#V#W&W~&ZP#[#]&^~&aP#]#^&d~&gP#V#W&j~&mP#T#U&p~&sP#`#a#q~&yVOr&vrs'`s#O&v#O#P'e#P;'S&v;'S;=`(^<%lO&v~'eOS~~'hRO;'S&v;'S;=`'q;=`O&v~'tWOr&vrs'`s#O&v#O#P'e#P;'S&v;'S;=`(^;=`<%l&v<%lO&v~(aP;=`<%l&v~(iSP~OY(dZ;'S(d;'S;=`(u<%lO(d~(xP;=`<%l(d~)OP#T#U)R~)UP#V#W)X~)[P#_#`)_~)bP#Z#[)e~)hP#f#g)k~)nP#c#d)q~)tP#i#j)w~)zP#b#c)}~*QP#W#X#q~*WP#c#d*Z~*^R#`#a*g#a#b*s#b#c+]~*jP#c#d*m~*pP#f#g#q~*vP#d#e*y~*|P#c#d+P~+SP#b#c+V~+YP#X#Y#e~+`P#h#i+c~+fP#T#U+i~+lP#]#^+o~+rP#b#c+u~+xP#X#Y*m~,OP#`#a,R~,UP#X#Y,X~,[P#a#b+V~,bP#c#d,e~,hP#W#X,k~,nP#X#Y&p~,tQ#X#Y,z#f#g-d~,}P#f#g-Q~-TP#g#h-W~-ZP#c#d-^~-aP#b#c#q~-gP#c#d-j~-mP#d#e-p~-sP#X#Y-v~-yP#f#g-|~.PP#h#i.S~.VP#]#^.Y~.]P#X#Y.`~.cP#g#h#q~.iP#X#Y.l~.oP#`#a.r~.uP#T#U.x~.{P#h#i/O~/RP#]#^/U~/XP#c#d/[~/_P#b#c/b~/eP#g#h/h~/kP#[#]/n~/qP#]#^/t~/wP#d#e#q~/}S#[#]0Z#c#d0m#h#i2X#m#n2e~0^P#T#U0a~0dP#d#e0g~0jP#X#Y#q~0pP#Y#Z0s~0vP#h#i0y~0|P#k#l1P~1SP#T#U1V~1YP#f#g1]~1`P#X#Y1c~1fP!u!v1i~1lP#m#n1o~1rP#g#h1u~1xP#h#i1{~2OP#X#Y2R~2UP#a#b#q~2[P#m#n2_~2bP#`#a.Y~2hP#g#h2k~2nP#h#i2q~2tP#X#Y2w~2zP#a#b2}~3QQ!n!o3W#V#W3v~3ZP#T#U3^~3aP#b#c3d~3gP#W#X3j~3mP#g#h3p~3sP#V#W0Z~3yP#c#d3|~4PP#b#c4S~4VP#h#i4Y~4]P#X#Y4`~4cP#l#m#k~4iP#]#^4l~4oP#X#Y4r~4uP#k#l.`~4{P#c#d5O~5RP#f#g5U~5XP#_#`5[~5_P#g#h5b~5eP#d#e5h~5kP#T#U5n~5qP#V#W0g~5yOU~~6OOT~",
  tokenizers: [0],
  topRules: {"Program":[0,2]},
  tokenPrec: 0
});

const FreyaLanguage = language.LRLanguage.define({
    parser: parser.configure({
        props: [
            language.indentNodeProp.add({
                Application: language.delimitedIndent({ closing: "}", align: false })
            }),
            language.foldNodeProp.add({
                Application: language.foldInside
            }),
            highlight.styleTags({
                Identifier: highlight.tags.keyword,
                String: highlight.tags.string,
                LineComment: highlight.tags.lineComment,
                "{ }": highlight.tags.paren
            })
        ]
    }),
    languageData: {
        commentTokens: { line: "#" }
    }
});
function Freya() {
    return new language.LanguageSupport(FreyaLanguage);
}

exports.Freya = Freya;
exports.FreyaLanguage = FreyaLanguage;
