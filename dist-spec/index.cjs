'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var lr = require('@lezer/lr');
var language = require('@codemirror/language');
var highlight = require('@lezer/highlight');

// This file was generated by lezer-generator. You probably shouldn't edit it.
const parser = lr.LRParser.deserialize({
  version: 14,
  states: "!WQYQPOOOeQPO'#CcOOQO'#Ch'#ChOOQO'#Cd'#CdQYQPOOOOQO,58},58}OsQPO,58}OOQO-E6b-E6bOOQO1G.i1G.i",
  stateData: "!R~OZOSPOS~ORQOSQOUPO~ORQOSQOTTOUPO~ORQOSQOTWOUPO~O",
  goto: "t]PPPPPPP^dPPPnXQOPSUQSOQUPTVSUXROPSU",
  nodeNames: "âš  LineComment Program Identifier String } { Application",
  maxTerm: 12,
  nodeProps: [
    ["openedBy", 5,"{"],
    ["closedBy", 6,"}"]
  ],
  skippedNodes: [0,1],
  repeatNodeCount: 1,
  tokenData: "(T~RYXYqYZq]^qpqqrs!Sst#p#V#W$X#g#h&X#o#p'y#q#r(O~vSZ~XYqYZq]^qpqq~!VVOr!Srs!ls#O!S#O#P!q#P;'S!S;'S;=`#j<%lO!S~!qOS~~!tRO;'S!S;'S;=`!};=`O!S~#QWOr!Srs!ls#O!S#O#P!q#P;'S!S;'S;=`#j;=`<%l!S<%lO!S~#mP;=`<%l!S~#uSP~OY#pZ;'S#p;'S;=`$R<%lO#p~$UP;=`<%l#p~$[P#c#d$_~$bQ#a#b$h#b#c%c~$kP#d#e$n~$qP#c#d$t~$wP#b#c$z~$}P#X#Y%Q~%TP#b#c%W~%ZP#h#i%^~%cOR~~%fP#h#i%i~%lP#T#U%o~%rP#]#^%u~%xP#b#c%{~&OP#X#Y&R~&UP#f#g%^~&[P#c#d&_~&bP#Y#Z&e~&hP#h#i&k~&nP#k#l&q~&tP#T#U&w~&zP#f#g&}~'QP#X#Y'T~'WP!u!v'Z~'^P#m#n'a~'dP#g#h'g~'jP#h#i'm~'pP#X#Y's~'vP#a#b%^~(OOU~~(TOT~",
  tokenizers: [0],
  topRules: {"Program":[0,2]},
  tokenPrec: 0
});

const FreyaLanguage = language.LRLanguage.define({
    parser: parser.configure({
        props: [
            language.indentNodeProp.add({
                Application: language.delimitedIndent({ closing: "}", align: false })
            }),
            language.foldNodeProp.add({
                Application: language.foldInside
            }),
            highlight.styleTags({
                Identifier: highlight.tags.keyword,
                String: highlight.tags.string,
                LineComment: highlight.tags.lineComment,
                "{ }": highlight.tags.paren
            })
        ]
    }),
    languageData: {
        commentTokens: { line: "#" }
    }
});
function Freya() {
    return new language.LanguageSupport(FreyaLanguage);
}

exports.Freya = Freya;
exports.FreyaLanguage = FreyaLanguage;
