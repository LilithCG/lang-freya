import { LRParser } from '@lezer/lr';
import { LRLanguage, indentNodeProp, delimitedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';
import { styleTags, tags } from '@lezer/highlight';

// This file was generated by lezer-generator. You probably shouldn't edit it.
const parser = LRParser.deserialize({
  version: 14,
  states: "!WQYQPOOOeQPO'#CbOOQO'#Cg'#CgOOQO'#Cc'#CcQYQPOOOOQO,58|,58|OsQPO,58|OOQO-E6a-E6aOOQO1G.h1G.h",
  stateData: "!R~OYOSPOS~ORQOTPO[QO~ORQOSTOTPO[QO~ORQOSWOTPO[QO~O",
  goto: "s[PPPPPP]cPPPmXQOPSUQSOQUPTVSUXROPSU",
  nodeNames: "âš  LineComment Program String } { Application",
  maxTerm: 12,
  nodeProps: [
    ["openedBy", 4,"{"],
    ["closedBy", 5,"}"]
  ],
  skippedNodes: [0,1],
  repeatNodeCount: 1,
  tokenData: "%g~RXXYnYZn]^npqnrs!Pst#m#V#W$U#o#p%]#q#r%b~sSY~XYnYZn]^npqn~!SVOr!Prs!is#O!P#O#P!n#P;'S!P;'S;=`#g<%lO!P~!nOR~~!qRO;'S!P;'S;=`!z;=`O!P~!}WOr!Prs!is#O!P#O#P!n#P;'S!P;'S;=`#g;=`<%l!P<%lO!P~#jP;=`<%l!P~#rSP~OY#mZ;'S#m;'S;=`$O<%lO#m~$RP;=`<%l#m~$XP#c#d$[~$_P#a#b$b~$eP#d#e$h~$kP#c#d$n~$qP#b#c$t~$wP#X#Y$z~$}P#b#c%Q~%TP#h#i%W~%]O[~~%bOT~~%gOS~",
  tokenizers: [0],
  topRules: {"Program":[0,2]},
  tokenPrec: 0
});

const FreyaLanguage = LRLanguage.define({
    parser: parser.configure({
        props: [
            indentNodeProp.add({
                Application: delimitedIndent({ closing: "}", align: false })
            }),
            foldNodeProp.add({
                Application: foldInside
            }),
            styleTags({
                keyword: tags.keyword,
                String: tags.string,
                LineComment: tags.lineComment,
                "{ }": tags.paren
            })
        ]
    }),
    languageData: {
        commentTokens: { line: "#" }
    }
});
function Freya() {
    return new LanguageSupport(FreyaLanguage);
}

export { Freya, FreyaLanguage };
